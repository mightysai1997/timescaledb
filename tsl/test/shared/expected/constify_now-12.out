-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
SET timescaledb.enable_chunk_append TO false;
SET timescaledb.enable_constraint_aware_append TO false;
SET timescaledb.current_timestamp_mock TO '1990-01-01';
\set PREFIX 'EXPLAIN (COSTS OFF, SUMMARY OFF, TIMING OFF)'
-- test valid variants we are optimizing
-- all of these should have a constified value as filter
-- none of these initial tests will actually exclude chunks
-- because we want to see the constified now expression in
-- EXPLAIN output
:PREFIX SELECT FROM metrics WHERE time > now();
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
(7 rows)

:PREFIX SELECT FROM metrics WHERE time >= now();
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= now())
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= now())
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= now())
(7 rows)

:PREFIX SELECT FROM metrics WHERE time > now() - '24h'::interval;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 24 hours'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 24 hours'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 24 hours'::interval))
(7 rows)

:PREFIX SELECT FROM metrics WHERE time > now() + '10m'::interval;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() + '@ 10 mins'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() + '@ 10 mins'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() + '@ 10 mins'::interval))
(7 rows)

:PREFIX SELECT FROM metrics WHERE time >= now() - '10m'::interval;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() - '@ 10 mins'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() - '@ 10 mins'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() - '@ 10 mins'::interval))
(7 rows)

:PREFIX SELECT FROM metrics WHERE time >= now() + '10m'::interval;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() + '@ 10 mins'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() + '@ 10 mins'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() + '@ 10 mins'::interval))
(7 rows)

-- test bitmapheapscan
SET enable_indexscan TO false;
:PREFIX SELECT FROM metrics WHERE time > now();
QUERY PLAN
 Append
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: ("time" > now())
         ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
               Index Cond: ("time" > now())
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: ("time" > now())
         ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
               Index Cond: ("time" > now())
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: ("time" > now())
         ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
               Index Cond: ("time" > now())
(13 rows)

RESET enable_indexscan;
-- test multiple constraints
:PREFIX SELECT FROM metrics WHERE time >= now() + '10m'::interval AND device_id = 2;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_device_id_time_idx on _hyper_X_X_chunk
         Index Cond: ((device_id = 2) AND ("time" >= (now() + '@ 10 mins'::interval)))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_device_id_time_idx on _hyper_X_X_chunk
         Index Cond: ((device_id = 2) AND ("time" >= (now() + '@ 10 mins'::interval)))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_device_id_time_idx on _hyper_X_X_chunk
         Index Cond: ((device_id = 2) AND ("time" >= (now() + '@ 10 mins'::interval)))
(7 rows)

:PREFIX SELECT FROM metrics WHERE time >= now() + '10m'::interval AND (device_id = 2 OR device_id = 3);
QUERY PLAN
 Append
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() + '@ 10 mins'::interval))
         Filter: ((device_id = 2) OR (device_id = 3))
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() + '@ 10 mins'::interval))
         Filter: ((device_id = 2) OR (device_id = 3))
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" >= (now() + '@ 10 mins'::interval))
         Filter: ((device_id = 2) OR (device_id = 3))
(10 rows)

:PREFIX SELECT FROM metrics WHERE time >= now() + '10m'::interval AND time >= now() - '10m'::interval;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: (("time" >= (now() + '@ 10 mins'::interval)) AND ("time" >= (now() - '@ 10 mins'::interval)))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: (("time" >= (now() + '@ 10 mins'::interval)) AND ("time" >= (now() - '@ 10 mins'::interval)))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: (("time" >= (now() + '@ 10 mins'::interval)) AND ("time" >= (now() - '@ 10 mins'::interval)))
(7 rows)

-- variants we don't optimize
-- we do not allow interval with day or month components
:PREFIX SELECT FROM metrics WHERE time > now() - '1d'::interval;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 1 day'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 1 day'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 1 day'::interval))
(7 rows)

:PREFIX SELECT FROM metrics WHERE time > now() - '1week'::interval;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 7 days'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 7 days'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 7 days'::interval))
(7 rows)

:PREFIX SELECT FROM metrics WHERE time > now() - '1month'::interval;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 1 mon'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 1 mon'::interval))
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now() - '@ 1 mon'::interval))
(7 rows)

:PREFIX SELECT FROM metrics WHERE time > now()::date;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now())::date)
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now())::date)
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > (now())::date)
(7 rows)

:PREFIX SELECT FROM metrics WHERE round(EXTRACT(EPOCH FROM now())) > 0.5;
QUERY PLAN
 Append
   ->  Result
         One-Time Filter: (round(date_part('epoch'::text, now())) > '0.5'::double precision)
         ->  Seq Scan on _hyper_X_X_chunk
   ->  Result
         One-Time Filter: (round(date_part('epoch'::text, now())) > '0.5'::double precision)
         ->  Seq Scan on _hyper_X_X_chunk
   ->  Result
         One-Time Filter: (round(date_part('epoch'::text, now())) > '0.5'::double precision)
         ->  Seq Scan on _hyper_X_X_chunk
(10 rows)

-- we only modify top-level ANDed now() expressions
:PREFIX SELECT FROM metrics WHERE time > now() - '1m'::interval OR time > now() + '1m'::interval;
QUERY PLAN
 Append
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: (("time" > (now() - '@ 1 min'::interval)) OR ("time" > (now() + '@ 1 min'::interval)))
         ->  BitmapOr
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: ("time" > (now() - '@ 1 min'::interval))
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: ("time" > (now() + '@ 1 min'::interval))
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: (("time" > (now() - '@ 1 min'::interval)) OR ("time" > (now() + '@ 1 min'::interval)))
         ->  BitmapOr
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: ("time" > (now() - '@ 1 min'::interval))
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: ("time" > (now() + '@ 1 min'::interval))
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: (("time" > (now() - '@ 1 min'::interval)) OR ("time" > (now() + '@ 1 min'::interval)))
         ->  BitmapOr
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: ("time" > (now() - '@ 1 min'::interval))
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: ("time" > (now() + '@ 1 min'::interval))
(22 rows)

:PREFIX SELECT FROM metrics WHERE device_id = 2 OR (time > now() - '1m'::interval AND time > now() + '1m'::interval);
QUERY PLAN
 Append
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: ((device_id = 2) OR (("time" > (now() - '@ 1 min'::interval)) AND ("time" > (now() + '@ 1 min'::interval))))
         ->  BitmapOr
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_device_id_time_idx
                     Index Cond: (device_id = 2)
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: (("time" > (now() - '@ 1 min'::interval)) AND ("time" > (now() + '@ 1 min'::interval)))
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: ((device_id = 2) OR (("time" > (now() - '@ 1 min'::interval)) AND ("time" > (now() + '@ 1 min'::interval))))
         ->  BitmapOr
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_device_id_time_idx
                     Index Cond: (device_id = 2)
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: (("time" > (now() - '@ 1 min'::interval)) AND ("time" > (now() + '@ 1 min'::interval)))
   ->  Bitmap Heap Scan on _hyper_X_X_chunk
         Recheck Cond: ((device_id = 2) OR (("time" > (now() - '@ 1 min'::interval)) AND ("time" > (now() + '@ 1 min'::interval))))
         ->  BitmapOr
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_device_id_time_idx
                     Index Cond: (device_id = 2)
               ->  Bitmap Index Scan on _hyper_X_X_chunk_metrics_time_idx
                     Index Cond: (("time" > (now() - '@ 1 min'::interval)) AND ("time" > (now() + '@ 1 min'::interval)))
(22 rows)

-- CTE
:PREFIX WITH q1 AS (
  SELECT * FROM metrics WHERE time > now()
) SELECT FROM q1;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
(7 rows)

:PREFIX WITH q1 AS (
  SELECT * FROM metrics
) SELECT FROM q1 WHERE time > now();
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
(7 rows)

-- JOIN
:PREFIX SELECT FROM metrics m1, metrics m2 WHERE m1.time > now();
QUERY PLAN
 Nested Loop
   ->  Append
         ->  Seq Scan on _hyper_X_X_chunk m2
         ->  Seq Scan on _hyper_X_X_chunk m2_1
         ->  Seq Scan on _hyper_X_X_chunk m2_2
   ->  Materialize
         ->  Append
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_1
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_2
                     Index Cond: ("time" > now())
(13 rows)

:PREFIX SELECT FROM metrics m1, metrics m2 WHERE m2.time > now();
QUERY PLAN
 Nested Loop
   ->  Append
         ->  Seq Scan on _hyper_X_X_chunk m1
         ->  Seq Scan on _hyper_X_X_chunk m1_1
         ->  Seq Scan on _hyper_X_X_chunk m1_2
   ->  Materialize
         ->  Append
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_1
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_2
                     Index Cond: ("time" > now())
(13 rows)

:PREFIX SELECT FROM metrics m1, metrics m2 WHERE m1.time > now() AND m2.time > now();
QUERY PLAN
 Nested Loop
   ->  Append
         ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1
               Index Cond: ("time" > now())
         ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_1
               Index Cond: ("time" > now())
         ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_2
               Index Cond: ("time" > now())
   ->  Materialize
         ->  Append
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_1
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_2
                     Index Cond: ("time" > now())
(16 rows)

-- only top-level constraints in WHERE clause are constified
:PREFIX SELECT FROM metrics m1 INNER JOIN metrics m2 ON (m1.time > now());
QUERY PLAN
 Nested Loop
   ->  Append
         ->  Seq Scan on _hyper_X_X_chunk m2
         ->  Seq Scan on _hyper_X_X_chunk m2_1
         ->  Seq Scan on _hyper_X_X_chunk m2_2
   ->  Materialize
         ->  Append
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_1
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_2
                     Index Cond: ("time" > now())
(13 rows)

:PREFIX SELECT FROM metrics m1 INNER JOIN metrics m2 ON (m1.time > now()) WHERE m2.time > now();
QUERY PLAN
 Nested Loop
   ->  Append
         ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1
               Index Cond: ("time" > now())
         ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_1
               Index Cond: ("time" > now())
         ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_2
               Index Cond: ("time" > now())
   ->  Materialize
         ->  Append
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_1
                     Index Cond: ("time" > now())
               ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_2
                     Index Cond: ("time" > now())
(16 rows)

-- test UPDATE
:PREFIX UPDATE metrics SET v0 = 0.1, v1 = EXTRACT(EPOCH FROM now()) WHERE time > now();
QUERY PLAN
 Update on metrics
   Update on metrics
   Update on _hyper_X_X_chunk
   Update on _hyper_X_X_chunk
   Update on _hyper_X_X_chunk
   ->  Seq Scan on metrics
         Filter: (("time" > 'Mon Jan 01 00:00:00 1990 PST'::timestamp with time zone) AND ("time" > now()))
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
(13 rows)

-- test DELETE
:PREFIX DELETE FROM metrics WHERE time > now();
QUERY PLAN
 Delete on metrics
   Delete on metrics
   Delete on _hyper_X_X_chunk
   Delete on _hyper_X_X_chunk
   Delete on _hyper_X_X_chunk
   ->  Seq Scan on metrics
         Filter: (("time" > 'Mon Jan 01 00:00:00 1990 PST'::timestamp with time zone) AND ("time" > now()))
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
(13 rows)

-- test chunks actually get excluded
-- should exclude all
SET timescaledb.current_timestamp_mock TO '2010-01-01';
:PREFIX SELECT FROM metrics WHERE time > now();
QUERY PLAN
 Result
   One-Time Filter: false
(2 rows)

-- should exclude all but 1 chunk
SET timescaledb.current_timestamp_mock TO '2000-01-14';
:PREFIX SELECT FROM metrics WHERE time > now();
QUERY PLAN
 Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk
   Index Cond: ("time" > now())
(2 rows)

CREATE TABLE const_now(time timestamptz, time2 timestamptz, value float);
-- does not apply to non-hypertables
:PREFIX SELECT FROM const_now WHERE time > now();
QUERY PLAN
 Seq Scan on const_now
   Filter: ("time" > now())
(2 rows)

SELECT table_name FROM create_hypertable('const_now','time');
NOTICE:  adding not-null constraint to column "time"
 table_name 
 const_now
(1 row)

INSERT INTO const_now SELECT '2000-01-01','2000-01-01',0.5;
-- should have one time filter false
:PREFIX SELECT FROM const_now WHERE time > now();
QUERY PLAN
 Result
   One-Time Filter: false
(2 rows)

-- no constification because it's not partitioning column
:PREFIX SELECT FROM const_now WHERE time2 > now();
QUERY PLAN
 Seq Scan on _hyper_X_X_chunk
   Filter: (time2 > now())
(2 rows)

DROP TABLE const_now;
-- test prepared statements
CREATE TABLE prep_const_now(time timestamptz, device int, value float);
SELECT table_name FROM create_hypertable('prep_const_now', 'time');
NOTICE:  adding not-null constraint to column "time"
   table_name   
 prep_const_now
(1 row)

INSERT INTO prep_const_now SELECT '3000-01-02', 1, 0.2;
INSERT INTO prep_const_now SELECT '3001-01-02', 2, 0.3;
INSERT INTO prep_const_now SELECT '3002-01-02', 3, 0.4;
SET timescaledb.current_timestamp_mock TO '3001-01-01';
PREPARE p1 AS SELECT FROM prep_const_now WHERE time > now();
:PREFIX EXECUTE p1;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_prep_const_now_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Only Scan using _hyper_X_X_chunk_prep_const_now_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
(5 rows)

EXECUTE p1;
(2 rows)

SET timescaledb.current_timestamp_mock TO '3002-01-01';
-- plan won't change cause the query didnt get replanned
:PREFIX EXECUTE p1;
QUERY PLAN
 Append
   ->  Index Only Scan using _hyper_X_X_chunk_prep_const_now_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
   ->  Index Only Scan using _hyper_X_X_chunk_prep_const_now_time_idx on _hyper_X_X_chunk
         Index Cond: ("time" > now())
(5 rows)

EXECUTE p1;
(2 rows)

DROP TABLE prep_const_now;
-- test outer var references dont trip up constify_now
-- no optimization is done in this case
:PREFIX SELECT * FROM
  metrics_tstz m1
  INNER JOIN metrics_tstz as m2 on (true)
WHERE
  EXISTS (SELECT * FROM metrics_tstz AS m3 WHERE m2.time > now());
QUERY PLAN
 Nested Loop
   ->  Seq Scan on _hyper_X_X_chunk m1
   ->  Materialize
         ->  Nested Loop Semi Join
               ->  Index Scan using _hyper_X_X_chunk_metrics_tstz_time_idx on _hyper_X_X_chunk m2
                     Index Cond: ("time" > now())
               ->  Materialize
                     ->  Seq Scan on _hyper_X_X_chunk m3
(8 rows)


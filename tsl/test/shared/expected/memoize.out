-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
SELECT
       format('include/%s_query.sql', :'TEST_BASE_NAME') as "TEST_QUERY_NAME",
       format('%s/shared/results/%s_results_unmemoized.out', :'TEST_OUTPUT_DIR', :'TEST_BASE_NAME') as "TEST_RESULTS_UNMEMOIZED",
       format('%s/shared/results/%s_results_memoized.out', :'TEST_OUTPUT_DIR', :'TEST_BASE_NAME') as "TEST_RESULTS_MEMOIZED"
\gset
SELECT format('\! diff -u --label "Unmemoized results" --label "Memoized results" %s %s', :'TEST_RESULTS_UNMEMOIZED', :'TEST_RESULTS_MEMOIZED') as "DIFF_CMD"
\gset
-- get EXPLAIN output for all variations
\set PREFIX 'EXPLAIN (analyze, costs off, timing off, summary off)'
SET work_mem TO '64MB';
SET enable_memoize TO on;
\set TEST_TABLE 'metrics'
\ir :TEST_QUERY_NAME
-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
SHOW enable_memoize;
 enable_memoize 
 on
(1 row)

:PREFIX
SELECT m1.time, m2.time
FROM :TEST_TABLE m1
LEFT JOIN LATERAL (SELECT time FROM :TEST_TABLE m2 WHERE m1.time = m2.time LIMIT 1) m2 ON true
ORDER BY m1.time
LIMIT 10000
;
QUERY PLAN
 Limit (actual rows=10000 loops=1)
   ->  Nested Loop Left Join (actual rows=10000 loops=1)
         ->  Custom Scan (ChunkAppend) on metrics m1 (actual rows=10000 loops=1)
               Order: m1."time"
               ->  Index Only Scan Backward using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_1 (actual rows=10000 loops=1)
                     Heap Fetches: 10000
               ->  Index Only Scan Backward using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_2 (never executed)
                     Heap Fetches: 0
               ->  Index Only Scan Backward using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m1_3 (never executed)
                     Heap Fetches: 0
         ->  Memoize (actual rows=1 loops=10000)
               Cache Key: m1."time"
               Cache Mode: binary
               Hits: 9000  Misses: 1000  Evictions: 0  Overflows: 0 
               ->  Limit (actual rows=1 loops=1000)
                     ->  Custom Scan (ChunkAppend) on metrics m2 (actual rows=1 loops=1000)
                           Chunks excluded during runtime: 2
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_1 (actual rows=1 loops=1000)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 1000
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_2 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_time_idx on _hyper_X_X_chunk m2_3 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
(26 rows)

\set TEST_TABLE 'metrics_space'
\ir :TEST_QUERY_NAME
-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
SHOW enable_memoize;
 enable_memoize 
 on
(1 row)

:PREFIX
SELECT m1.time, m2.time
FROM :TEST_TABLE m1
LEFT JOIN LATERAL (SELECT time FROM :TEST_TABLE m2 WHERE m1.time = m2.time LIMIT 1) m2 ON true
ORDER BY m1.time
LIMIT 10000
;
QUERY PLAN
 Limit (actual rows=10000 loops=1)
   ->  Nested Loop Left Join (actual rows=10000 loops=1)
         ->  Custom Scan (ChunkAppend) on metrics_space m1 (actual rows=10000 loops=1)
               Order: m1."time"
               ->  Merge Append (actual rows=10000 loops=1)
                     Sort Key: m1_1."time"
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_1 (actual rows=4001 loops=1)
                           Heap Fetches: 4001
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_2 (actual rows=4001 loops=1)
                           Heap Fetches: 4001
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_3 (actual rows=2000 loops=1)
                           Heap Fetches: 2000
               ->  Merge Append (never executed)
                     Sort Key: m1_4."time"
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_4 (never executed)
                           Heap Fetches: 0
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_5 (never executed)
                           Heap Fetches: 0
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_6 (never executed)
                           Heap Fetches: 0
               ->  Merge Append (never executed)
                     Sort Key: m1_7."time"
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_7 (never executed)
                           Heap Fetches: 0
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_8 (never executed)
                           Heap Fetches: 0
                     ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m1_9 (never executed)
                           Heap Fetches: 0
         ->  Memoize (actual rows=1 loops=10000)
               Cache Key: m1."time"
               Cache Mode: binary
               Hits: 9000  Misses: 1000  Evictions: 0  Overflows: 0 
               ->  Limit (actual rows=1 loops=1000)
                     ->  Custom Scan (ChunkAppend) on metrics_space m2 (actual rows=1 loops=1000)
                           Chunks excluded during runtime: 6
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_1 (actual rows=1 loops=1000)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 1000
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_2 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_3 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_4 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_5 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_6 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_7 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_8 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
                           ->  Index Only Scan using _hyper_X_X_chunk_metrics_space_time_idx on _hyper_X_X_chunk m2_9 (never executed)
                                 Index Cond: ("time" = m1."time")
                                 Heap Fetches: 0
(62 rows)

\set TEST_TABLE 'metrics_compressed'
\ir :TEST_QUERY_NAME
-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
SHOW enable_memoize;
 enable_memoize 
 on
(1 row)

:PREFIX
SELECT m1.time, m2.time
FROM :TEST_TABLE m1
LEFT JOIN LATERAL (SELECT time FROM :TEST_TABLE m2 WHERE m1.time = m2.time LIMIT 1) m2 ON true
ORDER BY m1.time
LIMIT 10000
;
QUERY PLAN
 Limit (actual rows=10000 loops=1)
   ->  Nested Loop Left Join (actual rows=10000 loops=1)
         ->  Custom Scan (ChunkAppend) on metrics_compressed m1 (actual rows=10000 loops=1)
               Order: m1."time"
               ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_1 (actual rows=10000 loops=1)
                     ->  Sort (actual rows=21 loops=1)
                           Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                           Sort Method: quicksort 
                           ->  Seq Scan on compress_hyper_X_X_chunk (actual rows=220 loops=1)
               ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_2 (never executed)
                     ->  Sort (never executed)
                           Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                           ->  Seq Scan on compress_hyper_X_X_chunk (never executed)
               ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_3 (never executed)
                     ->  Sort (never executed)
                           Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                           ->  Seq Scan on compress_hyper_X_X_chunk (never executed)
         ->  Memoize (actual rows=1 loops=10000)
               Cache Key: m1."time"
               Cache Mode: binary
               Hits: 9000  Misses: 1000  Evictions: 0  Overflows: 0 
               ->  Limit (actual rows=1 loops=1000)
                     ->  Custom Scan (ChunkAppend) on metrics_compressed m2 (actual rows=1 loops=1000)
                           Chunks excluded during runtime: 2
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_1 (actual rows=1 loops=1000)
                                 Filter: (m1."time" = "time")
                                 Rows Removed by Filter: 500
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (actual rows=1 loops=1000)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                                       Rows Removed by Filter: 21
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_2 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_3 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
(38 rows)

\set TEST_TABLE 'metrics_space_compressed'
\ir :TEST_QUERY_NAME
-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
SHOW enable_memoize;
 enable_memoize 
 on
(1 row)

:PREFIX
SELECT m1.time, m2.time
FROM :TEST_TABLE m1
LEFT JOIN LATERAL (SELECT time FROM :TEST_TABLE m2 WHERE m1.time = m2.time LIMIT 1) m2 ON true
ORDER BY m1.time
LIMIT 10000
;
QUERY PLAN
 Limit (actual rows=10000 loops=1)
   ->  Nested Loop Left Join (actual rows=10000 loops=1)
         ->  Custom Scan (ChunkAppend) on metrics_space_compressed m1 (actual rows=10000 loops=1)
               Order: m1."time"
               ->  Merge Append (actual rows=10000 loops=1)
                     Sort Key: m1_1."time"
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_1 (actual rows=4001 loops=1)
                           ->  Sort (actual rows=9 loops=1)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 Sort Method: quicksort 
                                 ->  Seq Scan on compress_hyper_X_X_chunk (actual rows=88 loops=1)
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_2 (actual rows=4001 loops=1)
                           ->  Sort (actual rows=9 loops=1)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 Sort Method: quicksort 
                                 ->  Seq Scan on compress_hyper_X_X_chunk (actual rows=88 loops=1)
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_3 (actual rows=2000 loops=1)
                           ->  Sort (actual rows=5 loops=1)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 Sort Method: quicksort 
                                 ->  Seq Scan on compress_hyper_X_X_chunk (actual rows=44 loops=1)
               ->  Merge Append (never executed)
                     Sort Key: m1_4."time"
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_4 (never executed)
                           ->  Sort (never executed)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 ->  Seq Scan on compress_hyper_X_X_chunk (never executed)
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_5 (never executed)
                           ->  Sort (never executed)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 ->  Seq Scan on compress_hyper_X_X_chunk (never executed)
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_6 (never executed)
                           ->  Sort (never executed)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 ->  Seq Scan on compress_hyper_X_X_chunk (never executed)
               ->  Merge Append (never executed)
                     Sort Key: m1_7."time"
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_7 (never executed)
                           ->  Sort (never executed)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 ->  Seq Scan on compress_hyper_X_X_chunk (never executed)
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_8 (never executed)
                           ->  Sort (never executed)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 ->  Seq Scan on compress_hyper_X_X_chunk (never executed)
                     ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m1_9 (never executed)
                           ->  Sort (never executed)
                                 Sort Key: compress_hyper_X_X_chunk._ts_meta_min_1
                                 ->  Seq Scan on compress_hyper_X_X_chunk (never executed)
         ->  Memoize (actual rows=1 loops=10000)
               Cache Key: m1."time"
               Cache Mode: binary
               Hits: 9000  Misses: 1000  Evictions: 0  Overflows: 0 
               ->  Limit (actual rows=1 loops=1000)
                     ->  Custom Scan (ChunkAppend) on metrics_space_compressed m2 (actual rows=1 loops=1000)
                           Chunks excluded during runtime: 6
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_1 (actual rows=1 loops=1000)
                                 Filter: (m1."time" = "time")
                                 Rows Removed by Filter: 500
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (actual rows=1 loops=1000)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                                       Rows Removed by Filter: 21
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_2 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_3 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_4 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_5 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_6 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_7 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_8 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
                           ->  Custom Scan (DecompressChunk) on _hyper_X_X_chunk m2_9 (never executed)
                                 Filter: (m1."time" = "time")
                                 ->  Seq Scan on compress_hyper_X_X_chunk compress_hyper_X_X_chunk_1 (never executed)
                                       Filter: ((_ts_meta_min_1 <= m1."time") AND (_ts_meta_max_1 >= m1."time"))
(94 rows)

-- get results for all the queries
-- run queries with and without memoize
\set PREFIX ''
\set ECHO none
--- Unmemoized results
+++ Memoized results
@@ -1,6 +1,6 @@
  enable_memoize 
 ----------------
- off
+ on
 (1 row)
 
              time             |             time             
@@ -10009,7 +10009,7 @@
 
  enable_memoize 
 ----------------
- off
+ on
 (1 row)
 
              time             |             time             
@@ -20018,7 +20018,7 @@
 
  enable_memoize 
 ----------------
- off
+ on
 (1 row)
 
              time             |             time             
@@ -30027,7 +30027,7 @@
 
  enable_memoize 
 ----------------
- off
+ on
 (1 row)
 
              time             |             time             

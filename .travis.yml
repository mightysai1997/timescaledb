sudo: required
language: c
os:
  - linux
services:
  - docker
env:
  # PG_VERSION (docker) and PG_GIT_TAG (Git) should be the same
  - PG_VERSION=9.6.6 PG_GIT_TAG=REL9_6_6
  - PG_VERSION=10.0 PG_GIT_TAG=REL_10_0
before_install:
  # We need the PostgreSQL source for running the standard PostgreSQL
  # regression tests
  - git clone --branch ${PG_GIT_TAG} --depth 1 https://github.com/postgres/postgres.git /tmp/postgres
  - docker run -d --name pgbuild -v ${TRAVIS_BUILD_DIR}:/build -v /tmp/postgres:/postgres postgres:${PG_VERSION}-alpine
install:
  - docker exec -it pgbuild /bin/sh -c "apk add --no-cache --virtual .build-deps coreutils dpkg-dev gcc libc-dev make util-linux-dev diffutils cmake bison flex curl git && mkdir -p /build/debug"
  - docker exec -it pgbuild /bin/sh -c "apk add --no-cache --virtual --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted lcov"
  # We only need to build the regress stuff
  - docker exec -it pgbuild /bin/sh -c "cd /postgres && ./configure --enable-coverage --enable-debug --enable-cassert --without-readline --without-zlib && make -C /postgres/src/test/regress"
  - docker exec -it pgbuild /bin/sh -c "cd /build/debug && CFLAGS=-Werror cmake .. -DCMAKE_BUILD_TYPE=Debug -DENABLE_CODECOVERAGE=TRUE -DPG_SOURCE_DIR=/postgres && make install && chown -R postgres:postgres /build/"
script:
  - docker exec -u postgres -it pgbuild /bin/sh -c "make -C /build/debug installcheck pginstallcheck PG_REGRESS_OPTS='--temp-instance=/tmp/pgdata'"
  - ci_env=`bash <(curl -s https://codecov.io/env)`
  - docker exec -it $ci_env pgbuild /bin/bash -c "cd /build/debug && bash <(curl -s https://codecov.io/bash) || echo \"Codecov did not collect coverage reports\" "
after_failure:
  - docker exec -it pgbuild cat /build/debug/test/regression.diffs /build/debug/test/pgtest/regressions.diffs
after_script:
  - docker rm -f pgbuild

jobs:
  include:
    - stage: test
      script:
        - PGTEST_TMPDIR=/tmp/ bash -x ./scripts/test_updates_all.sh

    - if: type = cron
      stage: test
      script:
        # There is a breakage of ABI between 10.1->10.2 so test starting at 10.2
        - PG_MAJOR=10 PG_MINOR_COMPILE=2 bash -x ./scripts/docker-run-abi-test.sh

    - if: type = cron
      stage: test
      script:
        # Versions <=9.6.1 is missing function `convert_tuples_by_name_map` needed by our code
        - PG_MAJOR=9.6 PG_MINOR_COMPILE=2 bash -x ./scripts/docker-run-abi-test.sh

    - if: type = cron
      stage: test
      env:
        - secure: "bXxTMsTaYET00Ji31/wh67lLXLRoKE699YZov+LJ3ZBuBabAyl3mseVanVz9YIxS++kbmArDunCAQG51kY+Kc4uDWj0IQ41bA/YIMsYDMpG1iKUSCxHB1RAYDYiu/1t4RcC5b54UIQJqQwsD3zBZJKG2BfFUxG+Vc+7Z7VtB0Rp+8fkpi2sxCH+CYcARM1ARiFsBr5doo+FgY73CSynGWGPDGhaQGRsBLft/5yt/1HIwSsvEjfQLrKNSn3x+X5+bjFfUsfvxGT38u70OxP1vkIBYqjVvsfafUqlwueX/Tzcbi4TZsiJWW066+ndIsuWCEmlHKqb+4/4Bq49AvEyZB2vzPKWcKEAQ2cCnuHTEjaismMVxejkqc6ukP5uFaDVEpnT334TkV73whAp8M+JGEF9I0wVaul4PJxBWWEGyOnpGHFYMJuvTwafIb3d6Ch4TFICLLsB8fDkRAeb2KH7IsSB4oVcifHTyt1veZ6SoIs36FlNVeuqQPhOrT5TIstdvuKzsch5h5BAuZ6fWzxKG56KIEfKeg05yLjssQsEKclbXVCkva4BLy0UEGVlZ0pbr2L5A+tkeF1/YUhZnwXdVkB7yMbM0So3w63f0p5o2ryZZ1pYpLRs+Z+uqR61EQ4YHZh5QoO8aVXweQcNOz7sKFkWP/VXs5tHWQFUQYeypesI="
        - secure: "kkEJFd/750NpL4dQKsfK+ioo/XBl8oWn9CZU6K7LzQRgZ7WI3S4fw538gnM+yO6BlCCZp1oGdktoHPKKTpUs8K3HjlXeiymBqEJnq5oyYkYFXKqQwyoEXpB6C24/xNSxQJPzJ7NN6sKoGrnjsCIjcPzOEkh/wEvajaDBCuwnahkpJw48x0RGc3NLvUwGE64yuC5AzQUsCnipGrMsVeqdABLvYu/y78wCehUDd7YqDUkuJn6ZuvNIgcw4pSSnReT0Wlx+L4owuPos+likhScAcBEdP3JaXhLHQ9FfNizbj+EvKLdIUq/LhpV41iSUqZ50VZCTQYPPS9GhDnCQ52JNUkrrdKQsdCd1NcvTU1OBqzMcyztb+pMy3G3dp88USbWx6UOcg6mCYmZXGPQgmZkqDeGqEolnj4L1njHF+/SMj9PpwYtwimgmHWOs7mjz0h3OzHmf9AHVP6Ftk3+arrsqopTWOID+tyXHAzQ0PI/ZcVqFyd4ZZ9ZxvtbMOgqFwJE4A+CnY5cIBfH4modWpTRYHevHMDvLvOx6ZnFsemT2a9N2WzxL/cZRRZlU7gOzbOPmzu3bTjLN6Laku2LaY93Y3av9mlgpzsuaHFEEu1gQPeDLEUf0CbCEumT3rBfsa1oiL/Ceacm0xHlXon8jqA41r4pQrbr03Mx9lm6/NZYoUmY="
      before_script:
        # clone valgrind test script
        - git clone https://$USR:$PASSWORD@bitbucket.org/440-labs/tsdb-dev-tools.git
      script:
        - cd ./tsdb-dev-tools/; bash -x ./test_valgrind.sh

    - stage: test
      env:
        - secure: "jy4DQH2syPR2v13igCNPTr044h3H/ilbJk6FifDMxGZVrOZR0dnkBx3O7qJMQOkEQvNxKsoq41k6HCP16qcgt4+HjxhcZonz5hKIiF8IpcB9r+TIlZunNTx7HjSNFZ3WCnham4AvMEthBHgAttRUhscy39ELCNUEobKS/youi7OHLOEXXShc84yTh3aSuGR3SnDVK1diLN5ufX6tN20pc3QvLMGZmA/jmJFcIQHGilhWGwwiJ45LSLwM9slvgGKbTM/K6btVBMOUnjM0h5WqPjRjDUL2tF+iZLEIpY8lFN/MQCnj0vP/BryDdoVPZS3TDQYwYuvASevQ4sOmULnM770jFqzClq4zkeM2GhMq67aYMmXjblu/qcLeCjZL+vfjMKpBMUydK/bCb097HvdRWDEPA0zItKWX9Kd6lVf2XbJCCh0ljp5REJEyk+plJ2V12nLpOPwY6zTtzcoTxEN6wcvUJfHAdNovpp63hWTnbAbEZamIdxwyCqpzThDobeD354TeXFUaKvrUw00iAiIhGL2QvwapaCbhlwM6NQAmdU3tMy3nZpka6bRI1kjyTh7CXfdwXV98ZJSiPdUFxyIgFNI2dKiL3BI1pvFDfq3mnmi3WqzZHCaQqDKNEtUrzxC40swIJGLcLUiqc5xX37P47jNDWrNIRDs8IdbM0tS9pFM="
      before_install:
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
        - sudo apt-get install -y postgresql-9.6 postgresql-client-9.6 postgresql-contrib-9.6 postgresql-server-dev-9.6 cmake3
      install: echo "Success"
      script: echo "Success"
      addons:
        postgresql: "9.6"
        coverity_scan:
          project:
            name: "timescale/timescaledb"
            description: "TimescaledDB an open-source time-series DB"
          notification_email: ci@timescale.com
          build_command_prepend: "./bootstrap -DCMAKE_BUILD_TYPE=Debug && cd build"
          build_command: "make"
          branch_pattern: coverity_scan

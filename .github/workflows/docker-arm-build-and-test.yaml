name: Regression ARM
on:
  push:
#    branches:
#      - arm_test
jobs:
  regress_arm:
    name: ARM PG${{ matrix.pg }} ${{ matrix.build_type }}
    runs-on: 'ubuntu-18.04'
    strategy:
      matrix:
        pg: [ 12 ]
        build_type: [ Release ]

      fail-fast: false
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
    - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset

    - uses: actions/checkout@v1

    - name: Build & Test
      # x86_64-focal, armhf-focal, arm64-focal
      # uses: docker://multiarch/ubuntu-core:x86_64-focal
      uses: docker://multiarch/ubuntu-core:arm64-focal
      with:
        args: >
          sh -c "
            apt-get update &&
            apt-get install -y --no-install-recommends libssl-dev cmake make postgresql-common gnupg systemd-coredump gcc gdb sudo &&
            yes | /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh &&
            apt-get update &&
            apt-get install -y --no-install-recommends postgresql-${{ matrix.pg }} postgresql-server-dev-${{ matrix.pg }} libkrb5-dev
            ./bootstrap -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DREGRESS_CHECKS=OFF -DTEST_GROUP_SIZE=1 &&
            make -C build &&
            make -C build install &&
            chown -R postgres:postgres . &&
            sudo -u postgres make -C build -k regresscheck TESTS='agg_bookends-12' SKIPS='bgw_db_scheduler bgw_launcher';
            echo 'bt' | sudo coredumpctl gdb;
            find build -name regression.diffs -exec cat {} + > regression.log
          "
#    - name: Show regression diffs
#      if: failure()
#      run: |
#        find . -name regression.diffs -exec cat {} + > regression.log
#        find . -name postmaster.log -exec cat {} + > postgres.log
#        cat regression.log

#    - name: Save regression diffs
#      if: failure()
#      uses: actions/upload-artifact@v2
#      with:
#        name: Regression diff ${{ matrix.pg }}
#        path: regression.log
#
#    - name: Save postmaster.log
#      if: failure()
#      uses: actions/upload-artifact@v2
#      with:
#        name: PostgreSQL log ${{ matrix.pg }}
#        path: postgres.log

#    - name: Slack Notification
#      if: failure() && github.event_name != 'pull_request'
#      env:
#        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#        SLACK_COLOR: '#ff0000'
#        SLACK_USERNAME: GitHub Action
#        SLACK_TITLE: Regression ARM PG${{ matrix.pg }} ${{ job.status }}
#        SLACK_MESSAGE: ${{ github.event.head_commit.message }}
#      uses: rtCamp/action-slack-notify@v2.0.2

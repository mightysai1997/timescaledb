name: SQLsmith
on:
  schedule:
    # run daily 2:00 on main branch
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches:
      - sqlsmith
jobs:
  sqlsmith:
    name: SQLsmith PG${{ matrix.pg }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-20.04"]
        pg: [ "15" ]
        build_type: ["Debug"]
      fail-fast: false
    env:
      PG_SRC_DIR: pgbuild
      PG_INSTALL_DIR: postgresql

    steps:
    - name: Install Linux Dependencies
      run: |
        sudo apt-get update

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install gnupg systemd-coredump gdb postgresql-common libkrb5-dev build-essential autoconf autoconf-archive libpqxx-dev libboost-regex-dev libsqlite3-dev
        yes | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
        sudo apt-get update
        sudo apt-get install postgresql-${{ matrix.pg }} postgresql-server-dev-${{ matrix.pg }}

    - name: Checkout TimescaleDB
      uses: actions/checkout@v3

    - name: Build TimescaleDB
      run: |
        ./bootstrap -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        make -C build
        sudo make -C build install

    - name: Checkout sqlsmith
      uses: actions/checkout@v3
      with:
        repository: 'timescale/sqlsmith'
        path: 'sqlsmith'
        ref: 'timescaledb'

    - name: Build SQLsmith
      run: |
        cd sqlsmith
        autoreconf -i
        ./configure
        make

    - name: Setup test environment
      run: |
        mkdir ~/pgdata
        /usr/lib/postgresql/${{ matrix.pg }}/bin/pg_ctl initdb -D ~/pgdata
        /usr/lib/postgresql/${{ matrix.pg }}/bin/pg_ctl -D ~/pgdata start -o "-cshared_preload_libraries=timescaledb" -o "-cmax_connections=200" -o "-cmax_prepared_transactions=100" -o "-cunix_socket_directories=/tmp"
        psql -h /tmp postgres -c 'CREATE DATABASE smith;'
        psql -h /tmp smith -c 'CREATE EXTENSION timescaledb;'
        psql -h /tmp smith -c '\i ${{ github.workspace }}/tsl/test/shared/sql/include/shared_setup.sql'

    # we run these in a loop to reinitialize the random number generator
    # 10 times 10000 queries seems to take roughly 40 minutes in CI
    - name: Run SQLsmith
      run: |
        cd sqlsmith
        for i in `seq 1 10`; do ./sqlsmith --seed=$((16#$(openssl rand -hex 3))) --exclude-catalog --target="host=/tmp dbname=smith" --max-queries=10000; done

    - name: Check for coredumps
      if: always()
      id: collectlogs
      run: |
        # wait for in progress coredumps
        sleep 10
        if coredumpctl list; then
          echo "coredumps=true" >>$GITHUB_OUTPUT
          false
        fi

    - name: Stack trace
      if: always() && steps.collectlogs.outputs.coredumps == 'true'
      run: |
        sudo coredumpctl gdb <<EOT
          printf "%s\n\n", debug_query_string
          bt full
        EOT
        ./scripts/bundle_coredumps.sh
        false

    - name: Upload Coredumps
      if: always() && steps.collectlogs.outputs.coredumps == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: Coredumps sqlsmith ${{ matrix.os }} PG${{ matrix.pg }}
        path: coredumps

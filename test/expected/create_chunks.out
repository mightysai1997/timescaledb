\ir include/create_single_db.sql
SET client_min_messages = WARNING;
DROP DATABASE IF EXISTS single;
SET client_min_messages = NOTICE;
CREATE DATABASE single;
\c single
CREATE EXTENSION IF NOT EXISTS timescaledb;
\ir switch_regular_user.sql
DO $$
BEGIN
    CREATE ROLE alt_usr LOGIN;
EXCEPTION
    WHEN duplicate_object THEN
        --mute error
END$$;
--test creating and using schema as non-superuser
\c single alt_usr
SET timescaledb.disable_optimizations = :DISABLE_OPTIMIZATIONS;
--
--  This test will create chunks in two dimenisions, time (x) and
--  space (y), where the time dimension is aligned. The figure below
--  shows the expected result. The chunk number in the figure
--  indicates the creation order.
--
--  +
--  +
--  +     +-----+     +-----+
--  +     |  2  |     |  3  |
--  +     |     +---+-+     |
--  +     +-----+ 5 |6+-----+
--  +     |  1  +---+-+-----+     +---------+
--  +     |     |   |4|  7  |     |    8    |
--  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
--  0         5         10        15        20
--
-- Partitioning:
--
-- Chunk #  |  time  | space
--    1     |   3    |   2
--    4     |   1    |   3
--    5     |   5    |   3
--
CREATE TABLE chunk_test(time integer, temp float8, tag integer, color integer);
SELECT create_hypertable('chunk_test', 'time', 'tag', 2, chunk_time_interval => 3);
 create_hypertable 
-------------------
 
(1 row)

INSERT INTO chunk_test VALUES (4, 24.3, 3, 1);
SELECT * FROM _timescaledb_catalog.dimension_slice;
 id | dimension_id | range_start | range_end  
----+--------------+-------------+------------
  1 |            1 |           3 |          6
  2 |            2 |           0 | 1073741823
(2 rows)

INSERT INTO chunk_test VALUES (4, 24.3, 1, 1);
INSERT INTO chunk_test VALUES (10, 24.3, 1, 1);
SELECT c.table_name AS chunk_name, d.id AS dimension_id, ds.id AS slice_id, range_start, range_end FROM _timescaledb_catalog.chunk c
LEFT JOIN _timescaledb_catalog.chunk_constraint cc ON (c.id = cc.chunk_id)
LEFT JOIN _timescaledb_catalog.dimension_slice ds ON (ds.id = cc.dimension_slice_id)
LEFT JOIN _timescaledb_catalog.dimension d ON (d.id = ds.dimension_id)
LEFT JOIN _timescaledb_catalog.hypertable h ON (d.hypertable_id = h.id)
WHERE h.schema_name = 'public' AND h.table_name = 'chunk_test'
ORDER BY c.id, d.id;
    chunk_name    | dimension_id | slice_id | range_start | range_end  
------------------+--------------+----------+-------------+------------
 _hyper_1_1_chunk |            1 |        1 |           3 |          6
 _hyper_1_1_chunk |            2 |        2 |           0 | 1073741823
 _hyper_1_2_chunk |            1 |        1 |           3 |          6
 _hyper_1_2_chunk |            2 |        3 |  1073741823 | 2147483647
 _hyper_1_3_chunk |            1 |        4 |           9 |         12
 _hyper_1_3_chunk |            2 |        3 |  1073741823 | 2147483647
(6 rows)

\c single postgres
UPDATE _timescaledb_catalog.dimension SET num_slices = 3 WHERE id = 2;
\c single alt_usr
SELECT set_chunk_time_interval('chunk_test', 1::bigint);
 set_chunk_time_interval 
-------------------------
 
(1 row)

INSERT INTO chunk_test VALUES (8, 24.3, 79669, 1);
SELECT set_chunk_time_interval('chunk_test', 5::bigint);
 set_chunk_time_interval 
-------------------------
 
(1 row)

SELECT * FROM _timescaledb_catalog.dimension;
 id | hypertable_id | column_name | column_type | aligned | num_slices | partitioning_func_schema |   partitioning_func   | interval_length 
----+---------------+-------------+-------------+---------+------------+--------------------------+-----------------------+-----------------
  2 |             1 | tag         | integer     | f       |          3 | _timescaledb_internal    | get_partition_for_key |                
  1 |             1 | time        | integer     | t       |            |                          |                       |               5
(2 rows)

INSERT INTO chunk_test VALUES (7, 24.3, 11233, 1);
INSERT INTO chunk_test VALUES (8, 24.3, 11233, 1);
INSERT INTO chunk_test VALUES (10, 24.3, 79669, 1);
INSERT INTO chunk_test VALUES (16, 24.3, 79669, 1);
SELECT c.table_name AS chunk_name, d.id AS dimension_id, ds.id AS slice_id, range_start, range_end FROM _timescaledb_catalog.chunk c
LEFT JOIN _timescaledb_catalog.chunk_constraint cc ON (c.id = cc.chunk_id)
LEFT JOIN _timescaledb_catalog.dimension_slice ds ON (ds.id = cc.dimension_slice_id)
LEFT JOIN _timescaledb_catalog.dimension d ON (d.id = ds.dimension_id)
LEFT JOIN _timescaledb_catalog.hypertable h ON (d.hypertable_id = h.id)
WHERE h.schema_name = 'public' AND h.table_name = 'chunk_test'
ORDER BY c.id, d.id;
    chunk_name    | dimension_id | slice_id | range_start | range_end  
------------------+--------------+----------+-------------+------------
 _hyper_1_1_chunk |            1 |        1 |           3 |          6
 _hyper_1_1_chunk |            2 |        2 |           0 | 1073741823
 _hyper_1_2_chunk |            1 |        1 |           3 |          6
 _hyper_1_2_chunk |            2 |        3 |  1073741823 | 2147483647
 _hyper_1_3_chunk |            1 |        4 |           9 |         12
 _hyper_1_3_chunk |            2 |        3 |  1073741823 | 2147483647
 _hyper_1_4_chunk |            1 |        5 |           8 |          9
 _hyper_1_4_chunk |            2 |        6 |           0 |  715827882
 _hyper_1_5_chunk |            1 |        7 |           6 |          8
 _hyper_1_5_chunk |            2 |        8 |   715827882 | 1431655764
 _hyper_1_6_chunk |            1 |        5 |           8 |          9
 _hyper_1_6_chunk |            2 |        8 |   715827882 | 1431655764
 _hyper_1_7_chunk |            1 |        4 |           9 |         12
 _hyper_1_7_chunk |            2 |        6 |           0 |  715827882
 _hyper_1_8_chunk |            1 |        9 |          15 |         20
 _hyper_1_8_chunk |            2 |        6 |           0 |  715827882
(16 rows)

